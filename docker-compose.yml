# Stori Expense Tracker - Docker Compose Configuration
version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      # Supabase Configuration (override in .env file)
      - SUPABASE_URL=${SUPABASE_URL:-https://your-project.supabase.co}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-your-anon-key}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-your-service-role-key}

      # AI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - DEFAULT_LLM_PROVIDER=${DEFAULT_LLM_PROVIDER:-openai}
      - DEFAULT_EMBEDDING_PROVIDER=${DEFAULT_EMBEDDING_PROVIDER:-openai}

      # FastAPI Configuration
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    networks:
      - stori-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (when ready)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL:-https://your-project.supabase.co}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-your-anon-key}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - stori-network
    depends_on:
      - backend
    restart: unless-stopped
    profiles:
      - frontend # Only start when frontend is ready

# Shared network for service communication
networks:
  stori-network:
    driver: bridge

# Persistent volumes
volumes:
  backend_data:
    driver: local
